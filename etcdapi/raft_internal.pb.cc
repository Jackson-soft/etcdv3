// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: raft_internal.proto

#include "raft_internal.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_rpc_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AlarmRequest_rpc_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_rpc_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AuthDisableRequest_rpc_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_rpc_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AuthEnableRequest_rpc_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_rpc_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AuthRoleAddRequest_rpc_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_rpc_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AuthRoleDeleteRequest_rpc_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_rpc_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AuthRoleGetRequest_rpc_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_rpc_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_AuthRoleGrantPermissionRequest_rpc_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_rpc_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AuthRoleListRequest_rpc_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_rpc_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AuthRoleRevokePermissionRequest_rpc_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_rpc_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AuthUserAddRequest_rpc_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_rpc_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AuthUserChangePasswordRequest_rpc_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_rpc_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AuthUserDeleteRequest_rpc_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_rpc_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AuthUserGetRequest_rpc_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_rpc_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AuthUserGrantRoleRequest_rpc_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_rpc_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AuthUserListRequest_rpc_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_rpc_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AuthUserRevokeRoleRequest_rpc_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_rpc_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CompactionRequest_rpc_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_rpc_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteRangeRequest_rpc_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_raft_5finternal_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InternalAuthenticateRequest_raft_5finternal_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_rpc_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LeaseGrantRequest_rpc_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_rpc_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LeaseRevokeRequest_rpc_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_rpc_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PutRequest_rpc_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_rpc_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RangeRequest_rpc_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_etcdserver_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Request_etcdserver_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_raft_5finternal_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RequestHeader_raft_5finternal_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_rpc_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_RequestOp_rpc_2eproto;
namespace etcdserverpb {
class RequestHeaderDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RequestHeader> _instance;
} _RequestHeader_default_instance_;
class InternalRaftRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InternalRaftRequest> _instance;
} _InternalRaftRequest_default_instance_;
class EmptyResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EmptyResponse> _instance;
} _EmptyResponse_default_instance_;
class InternalAuthenticateRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InternalAuthenticateRequest> _instance;
} _InternalAuthenticateRequest_default_instance_;
}  // namespace etcdserverpb
static void InitDefaultsscc_info_EmptyResponse_raft_5finternal_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::etcdserverpb::_EmptyResponse_default_instance_;
    new (ptr) ::etcdserverpb::EmptyResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::EmptyResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EmptyResponse_raft_5finternal_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_EmptyResponse_raft_5finternal_2eproto}, {}};

static void InitDefaultsscc_info_InternalAuthenticateRequest_raft_5finternal_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::etcdserverpb::_InternalAuthenticateRequest_default_instance_;
    new (ptr) ::etcdserverpb::InternalAuthenticateRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::InternalAuthenticateRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InternalAuthenticateRequest_raft_5finternal_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_InternalAuthenticateRequest_raft_5finternal_2eproto}, {}};

static void InitDefaultsscc_info_InternalRaftRequest_raft_5finternal_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::etcdserverpb::_InternalRaftRequest_default_instance_;
    new (ptr) ::etcdserverpb::InternalRaftRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::InternalRaftRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<26> scc_info_InternalRaftRequest_raft_5finternal_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 26, 0, InitDefaultsscc_info_InternalRaftRequest_raft_5finternal_2eproto}, {
      &scc_info_RequestHeader_raft_5finternal_2eproto.base,
      &scc_info_Request_etcdserver_2eproto.base,
      &scc_info_RangeRequest_rpc_2eproto.base,
      &scc_info_PutRequest_rpc_2eproto.base,
      &scc_info_DeleteRangeRequest_rpc_2eproto.base,
      &scc_info_RequestOp_rpc_2eproto.base,
      &scc_info_CompactionRequest_rpc_2eproto.base,
      &scc_info_LeaseGrantRequest_rpc_2eproto.base,
      &scc_info_LeaseRevokeRequest_rpc_2eproto.base,
      &scc_info_AlarmRequest_rpc_2eproto.base,
      &scc_info_AuthEnableRequest_rpc_2eproto.base,
      &scc_info_AuthDisableRequest_rpc_2eproto.base,
      &scc_info_InternalAuthenticateRequest_raft_5finternal_2eproto.base,
      &scc_info_AuthUserAddRequest_rpc_2eproto.base,
      &scc_info_AuthUserDeleteRequest_rpc_2eproto.base,
      &scc_info_AuthUserGetRequest_rpc_2eproto.base,
      &scc_info_AuthUserChangePasswordRequest_rpc_2eproto.base,
      &scc_info_AuthUserGrantRoleRequest_rpc_2eproto.base,
      &scc_info_AuthUserRevokeRoleRequest_rpc_2eproto.base,
      &scc_info_AuthUserListRequest_rpc_2eproto.base,
      &scc_info_AuthRoleListRequest_rpc_2eproto.base,
      &scc_info_AuthRoleAddRequest_rpc_2eproto.base,
      &scc_info_AuthRoleDeleteRequest_rpc_2eproto.base,
      &scc_info_AuthRoleGetRequest_rpc_2eproto.base,
      &scc_info_AuthRoleGrantPermissionRequest_rpc_2eproto.base,
      &scc_info_AuthRoleRevokePermissionRequest_rpc_2eproto.base,}};

static void InitDefaultsscc_info_RequestHeader_raft_5finternal_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::etcdserverpb::_RequestHeader_default_instance_;
    new (ptr) ::etcdserverpb::RequestHeader();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::etcdserverpb::RequestHeader::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RequestHeader_raft_5finternal_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RequestHeader_raft_5finternal_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_raft_5finternal_2eproto[4];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_raft_5finternal_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_raft_5finternal_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_raft_5finternal_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::etcdserverpb::RequestHeader, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::etcdserverpb::RequestHeader, id_),
  PROTOBUF_FIELD_OFFSET(::etcdserverpb::RequestHeader, username_),
  PROTOBUF_FIELD_OFFSET(::etcdserverpb::RequestHeader, auth_revision_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::etcdserverpb::InternalRaftRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::etcdserverpb::InternalRaftRequest, header_),
  PROTOBUF_FIELD_OFFSET(::etcdserverpb::InternalRaftRequest, id_),
  PROTOBUF_FIELD_OFFSET(::etcdserverpb::InternalRaftRequest, v2_),
  PROTOBUF_FIELD_OFFSET(::etcdserverpb::InternalRaftRequest, range_),
  PROTOBUF_FIELD_OFFSET(::etcdserverpb::InternalRaftRequest, put_),
  PROTOBUF_FIELD_OFFSET(::etcdserverpb::InternalRaftRequest, delete_range_),
  PROTOBUF_FIELD_OFFSET(::etcdserverpb::InternalRaftRequest, txn_),
  PROTOBUF_FIELD_OFFSET(::etcdserverpb::InternalRaftRequest, compaction_),
  PROTOBUF_FIELD_OFFSET(::etcdserverpb::InternalRaftRequest, lease_grant_),
  PROTOBUF_FIELD_OFFSET(::etcdserverpb::InternalRaftRequest, lease_revoke_),
  PROTOBUF_FIELD_OFFSET(::etcdserverpb::InternalRaftRequest, alarm_),
  PROTOBUF_FIELD_OFFSET(::etcdserverpb::InternalRaftRequest, auth_enable_),
  PROTOBUF_FIELD_OFFSET(::etcdserverpb::InternalRaftRequest, auth_disable_),
  PROTOBUF_FIELD_OFFSET(::etcdserverpb::InternalRaftRequest, authenticate_),
  PROTOBUF_FIELD_OFFSET(::etcdserverpb::InternalRaftRequest, auth_user_add_),
  PROTOBUF_FIELD_OFFSET(::etcdserverpb::InternalRaftRequest, auth_user_delete_),
  PROTOBUF_FIELD_OFFSET(::etcdserverpb::InternalRaftRequest, auth_user_get_),
  PROTOBUF_FIELD_OFFSET(::etcdserverpb::InternalRaftRequest, auth_user_change_password_),
  PROTOBUF_FIELD_OFFSET(::etcdserverpb::InternalRaftRequest, auth_user_grant_role_),
  PROTOBUF_FIELD_OFFSET(::etcdserverpb::InternalRaftRequest, auth_user_revoke_role_),
  PROTOBUF_FIELD_OFFSET(::etcdserverpb::InternalRaftRequest, auth_user_list_),
  PROTOBUF_FIELD_OFFSET(::etcdserverpb::InternalRaftRequest, auth_role_list_),
  PROTOBUF_FIELD_OFFSET(::etcdserverpb::InternalRaftRequest, auth_role_add_),
  PROTOBUF_FIELD_OFFSET(::etcdserverpb::InternalRaftRequest, auth_role_delete_),
  PROTOBUF_FIELD_OFFSET(::etcdserverpb::InternalRaftRequest, auth_role_get_),
  PROTOBUF_FIELD_OFFSET(::etcdserverpb::InternalRaftRequest, auth_role_grant_permission_),
  PROTOBUF_FIELD_OFFSET(::etcdserverpb::InternalRaftRequest, auth_role_revoke_permission_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::etcdserverpb::EmptyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::etcdserverpb::InternalAuthenticateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::etcdserverpb::InternalAuthenticateRequest, name_),
  PROTOBUF_FIELD_OFFSET(::etcdserverpb::InternalAuthenticateRequest, password_),
  PROTOBUF_FIELD_OFFSET(::etcdserverpb::InternalAuthenticateRequest, simple_token_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::etcdserverpb::RequestHeader)},
  { 8, -1, sizeof(::etcdserverpb::InternalRaftRequest)},
  { 40, -1, sizeof(::etcdserverpb::EmptyResponse)},
  { 45, -1, sizeof(::etcdserverpb::InternalAuthenticateRequest)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::etcdserverpb::_RequestHeader_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::etcdserverpb::_InternalRaftRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::etcdserverpb::_EmptyResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::etcdserverpb::_InternalAuthenticateRequest_default_instance_),
};

const char descriptor_table_protodef_raft_5finternal_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\023raft_internal.proto\022\014etcdserverpb\032\ngog"
  "o.proto\032\020etcdserver.proto\032\trpc.proto\"D\n\r"
  "RequestHeader\022\n\n\002ID\030\001 \001(\004\022\020\n\010username\030\002 "
  "\001(\t\022\025\n\rauth_revision\030\003 \001(\004\"\213\014\n\023InternalR"
  "aftRequest\022+\n\006header\030d \001(\0132\033.etcdserverp"
  "b.RequestHeader\022\n\n\002ID\030\001 \001(\004\022!\n\002v2\030\002 \001(\0132"
  "\025.etcdserverpb.Request\022)\n\005range\030\003 \001(\0132\032."
  "etcdserverpb.RangeRequest\022%\n\003put\030\004 \001(\0132\030"
  ".etcdserverpb.PutRequest\0226\n\014delete_range"
  "\030\005 \001(\0132 .etcdserverpb.DeleteRangeRequest"
  "\022%\n\003txn\030\006 \001(\0132\030.etcdserverpb.TxnRequest\022"
  "3\n\ncompaction\030\007 \001(\0132\037.etcdserverpb.Compa"
  "ctionRequest\0224\n\013lease_grant\030\010 \001(\0132\037.etcd"
  "serverpb.LeaseGrantRequest\0226\n\014lease_revo"
  "ke\030\t \001(\0132 .etcdserverpb.LeaseRevokeReque"
  "st\022)\n\005alarm\030\n \001(\0132\032.etcdserverpb.AlarmRe"
  "quest\0225\n\013auth_enable\030\350\007 \001(\0132\037.etcdserver"
  "pb.AuthEnableRequest\0227\n\014auth_disable\030\363\007 "
  "\001(\0132 .etcdserverpb.AuthDisableRequest\022@\n"
  "\014authenticate\030\364\007 \001(\0132).etcdserverpb.Inte"
  "rnalAuthenticateRequest\0228\n\rauth_user_add"
  "\030\314\010 \001(\0132 .etcdserverpb.AuthUserAddReques"
  "t\022>\n\020auth_user_delete\030\315\010 \001(\0132#.etcdserve"
  "rpb.AuthUserDeleteRequest\0228\n\rauth_user_g"
  "et\030\316\010 \001(\0132 .etcdserverpb.AuthUserGetRequ"
  "est\022O\n\031auth_user_change_password\030\317\010 \001(\0132"
  "+.etcdserverpb.AuthUserChangePasswordReq"
  "uest\022E\n\024auth_user_grant_role\030\320\010 \001(\0132&.et"
  "cdserverpb.AuthUserGrantRoleRequest\022G\n\025a"
  "uth_user_revoke_role\030\321\010 \001(\0132\'.etcdserver"
  "pb.AuthUserRevokeRoleRequest\022:\n\016auth_use"
  "r_list\030\322\010 \001(\0132!.etcdserverpb.AuthUserLis"
  "tRequest\022:\n\016auth_role_list\030\323\010 \001(\0132!.etcd"
  "serverpb.AuthRoleListRequest\0228\n\rauth_rol"
  "e_add\030\260\t \001(\0132 .etcdserverpb.AuthRoleAddR"
  "equest\022>\n\020auth_role_delete\030\261\t \001(\0132#.etcd"
  "serverpb.AuthRoleDeleteRequest\0228\n\rauth_r"
  "ole_get\030\262\t \001(\0132 .etcdserverpb.AuthRoleGe"
  "tRequest\022Q\n\032auth_role_grant_permission\030\263"
  "\t \001(\0132,.etcdserverpb.AuthRoleGrantPermis"
  "sionRequest\022S\n\033auth_role_revoke_permissi"
  "on\030\264\t \001(\0132-.etcdserverpb.AuthRoleRevokeP"
  "ermissionRequest\"\017\n\rEmptyResponse\"S\n\033Int"
  "ernalAuthenticateRequest\022\014\n\004name\030\001 \001(\t\022\020"
  "\n\010password\030\002 \001(\t\022\024\n\014simple_token\030\003 \001(\tB\020"
  "\310\342\036\001\340\342\036\001\320\342\036\001\310\341\036\000b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_raft_5finternal_2eproto_deps[3] = {
  &::descriptor_table_etcdserver_2eproto,
  &::descriptor_table_gogo_2eproto,
  &::descriptor_table_rpc_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_raft_5finternal_2eproto_sccs[4] = {
  &scc_info_EmptyResponse_raft_5finternal_2eproto.base,
  &scc_info_InternalAuthenticateRequest_raft_5finternal_2eproto.base,
  &scc_info_InternalRaftRequest_raft_5finternal_2eproto.base,
  &scc_info_RequestHeader_raft_5finternal_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_raft_5finternal_2eproto_once;
static bool descriptor_table_raft_5finternal_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_raft_5finternal_2eproto = {
  &descriptor_table_raft_5finternal_2eproto_initialized, descriptor_table_protodef_raft_5finternal_2eproto, "raft_internal.proto", 1824,
  &descriptor_table_raft_5finternal_2eproto_once, descriptor_table_raft_5finternal_2eproto_sccs, descriptor_table_raft_5finternal_2eproto_deps, 4, 3,
  schemas, file_default_instances, TableStruct_raft_5finternal_2eproto::offsets,
  file_level_metadata_raft_5finternal_2eproto, 4, file_level_enum_descriptors_raft_5finternal_2eproto, file_level_service_descriptors_raft_5finternal_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_raft_5finternal_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_raft_5finternal_2eproto), true);
namespace etcdserverpb {

// ===================================================================

void RequestHeader::InitAsDefaultInstance() {
}
class RequestHeader::_Internal {
 public:
};

RequestHeader::RequestHeader()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.RequestHeader)
}
RequestHeader::RequestHeader(const RequestHeader& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_username().empty()) {
    username_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&auth_revision_) -
    reinterpret_cast<char*>(&id_)) + sizeof(auth_revision_));
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.RequestHeader)
}

void RequestHeader::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RequestHeader_raft_5finternal_2eproto.base);
  username_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&auth_revision_) -
      reinterpret_cast<char*>(&id_)) + sizeof(auth_revision_));
}

RequestHeader::~RequestHeader() {
  // @@protoc_insertion_point(destructor:etcdserverpb.RequestHeader)
  SharedDtor();
}

void RequestHeader::SharedDtor() {
  username_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RequestHeader::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RequestHeader& RequestHeader::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RequestHeader_raft_5finternal_2eproto.base);
  return *internal_default_instance();
}


void RequestHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.RequestHeader)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&auth_revision_) -
      reinterpret_cast<char*>(&id_)) + sizeof(auth_revision_));
  _internal_metadata_.Clear();
}

const char* RequestHeader::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 ID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string username = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_username(), ptr, ctx, "etcdserverpb.RequestHeader.username");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 auth_revision = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          auth_revision_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RequestHeader::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.RequestHeader)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 ID = 1;
  if (this->id() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_id(), target);
  }

  // string username = 2;
  if (this->username().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_username().data(), static_cast<int>(this->_internal_username().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "etcdserverpb.RequestHeader.username");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_username(), target);
  }

  // uint64 auth_revision = 3;
  if (this->auth_revision() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_auth_revision(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.RequestHeader)
  return target;
}

size_t RequestHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.RequestHeader)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string username = 2;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_username());
  }

  // uint64 ID = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_id());
  }

  // uint64 auth_revision = 3;
  if (this->auth_revision() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_auth_revision());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RequestHeader::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.RequestHeader)
  GOOGLE_DCHECK_NE(&from, this);
  const RequestHeader* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RequestHeader>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.RequestHeader)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.RequestHeader)
    MergeFrom(*source);
  }
}

void RequestHeader::MergeFrom(const RequestHeader& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.RequestHeader)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.auth_revision() != 0) {
    _internal_set_auth_revision(from._internal_auth_revision());
  }
}

void RequestHeader::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.RequestHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestHeader::CopyFrom(const RequestHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.RequestHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestHeader::IsInitialized() const {
  return true;
}

void RequestHeader::InternalSwap(RequestHeader* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  username_.Swap(&other->username_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(auth_revision_, other->auth_revision_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RequestHeader::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void InternalRaftRequest::InitAsDefaultInstance() {
  ::etcdserverpb::_InternalRaftRequest_default_instance_._instance.get_mutable()->header_ = const_cast< ::etcdserverpb::RequestHeader*>(
      ::etcdserverpb::RequestHeader::internal_default_instance());
  ::etcdserverpb::_InternalRaftRequest_default_instance_._instance.get_mutable()->v2_ = const_cast< ::etcdserverpb::Request*>(
      ::etcdserverpb::Request::internal_default_instance());
  ::etcdserverpb::_InternalRaftRequest_default_instance_._instance.get_mutable()->range_ = const_cast< ::etcdserverpb::RangeRequest*>(
      ::etcdserverpb::RangeRequest::internal_default_instance());
  ::etcdserverpb::_InternalRaftRequest_default_instance_._instance.get_mutable()->put_ = const_cast< ::etcdserverpb::PutRequest*>(
      ::etcdserverpb::PutRequest::internal_default_instance());
  ::etcdserverpb::_InternalRaftRequest_default_instance_._instance.get_mutable()->delete_range_ = const_cast< ::etcdserverpb::DeleteRangeRequest*>(
      ::etcdserverpb::DeleteRangeRequest::internal_default_instance());
  ::etcdserverpb::_InternalRaftRequest_default_instance_._instance.get_mutable()->txn_ = const_cast< ::etcdserverpb::TxnRequest*>(
      ::etcdserverpb::TxnRequest::internal_default_instance());
  ::etcdserverpb::_InternalRaftRequest_default_instance_._instance.get_mutable()->compaction_ = const_cast< ::etcdserverpb::CompactionRequest*>(
      ::etcdserverpb::CompactionRequest::internal_default_instance());
  ::etcdserverpb::_InternalRaftRequest_default_instance_._instance.get_mutable()->lease_grant_ = const_cast< ::etcdserverpb::LeaseGrantRequest*>(
      ::etcdserverpb::LeaseGrantRequest::internal_default_instance());
  ::etcdserverpb::_InternalRaftRequest_default_instance_._instance.get_mutable()->lease_revoke_ = const_cast< ::etcdserverpb::LeaseRevokeRequest*>(
      ::etcdserverpb::LeaseRevokeRequest::internal_default_instance());
  ::etcdserverpb::_InternalRaftRequest_default_instance_._instance.get_mutable()->alarm_ = const_cast< ::etcdserverpb::AlarmRequest*>(
      ::etcdserverpb::AlarmRequest::internal_default_instance());
  ::etcdserverpb::_InternalRaftRequest_default_instance_._instance.get_mutable()->auth_enable_ = const_cast< ::etcdserverpb::AuthEnableRequest*>(
      ::etcdserverpb::AuthEnableRequest::internal_default_instance());
  ::etcdserverpb::_InternalRaftRequest_default_instance_._instance.get_mutable()->auth_disable_ = const_cast< ::etcdserverpb::AuthDisableRequest*>(
      ::etcdserverpb::AuthDisableRequest::internal_default_instance());
  ::etcdserverpb::_InternalRaftRequest_default_instance_._instance.get_mutable()->authenticate_ = const_cast< ::etcdserverpb::InternalAuthenticateRequest*>(
      ::etcdserverpb::InternalAuthenticateRequest::internal_default_instance());
  ::etcdserverpb::_InternalRaftRequest_default_instance_._instance.get_mutable()->auth_user_add_ = const_cast< ::etcdserverpb::AuthUserAddRequest*>(
      ::etcdserverpb::AuthUserAddRequest::internal_default_instance());
  ::etcdserverpb::_InternalRaftRequest_default_instance_._instance.get_mutable()->auth_user_delete_ = const_cast< ::etcdserverpb::AuthUserDeleteRequest*>(
      ::etcdserverpb::AuthUserDeleteRequest::internal_default_instance());
  ::etcdserverpb::_InternalRaftRequest_default_instance_._instance.get_mutable()->auth_user_get_ = const_cast< ::etcdserverpb::AuthUserGetRequest*>(
      ::etcdserverpb::AuthUserGetRequest::internal_default_instance());
  ::etcdserverpb::_InternalRaftRequest_default_instance_._instance.get_mutable()->auth_user_change_password_ = const_cast< ::etcdserverpb::AuthUserChangePasswordRequest*>(
      ::etcdserverpb::AuthUserChangePasswordRequest::internal_default_instance());
  ::etcdserverpb::_InternalRaftRequest_default_instance_._instance.get_mutable()->auth_user_grant_role_ = const_cast< ::etcdserverpb::AuthUserGrantRoleRequest*>(
      ::etcdserverpb::AuthUserGrantRoleRequest::internal_default_instance());
  ::etcdserverpb::_InternalRaftRequest_default_instance_._instance.get_mutable()->auth_user_revoke_role_ = const_cast< ::etcdserverpb::AuthUserRevokeRoleRequest*>(
      ::etcdserverpb::AuthUserRevokeRoleRequest::internal_default_instance());
  ::etcdserverpb::_InternalRaftRequest_default_instance_._instance.get_mutable()->auth_user_list_ = const_cast< ::etcdserverpb::AuthUserListRequest*>(
      ::etcdserverpb::AuthUserListRequest::internal_default_instance());
  ::etcdserverpb::_InternalRaftRequest_default_instance_._instance.get_mutable()->auth_role_list_ = const_cast< ::etcdserverpb::AuthRoleListRequest*>(
      ::etcdserverpb::AuthRoleListRequest::internal_default_instance());
  ::etcdserverpb::_InternalRaftRequest_default_instance_._instance.get_mutable()->auth_role_add_ = const_cast< ::etcdserverpb::AuthRoleAddRequest*>(
      ::etcdserverpb::AuthRoleAddRequest::internal_default_instance());
  ::etcdserverpb::_InternalRaftRequest_default_instance_._instance.get_mutable()->auth_role_delete_ = const_cast< ::etcdserverpb::AuthRoleDeleteRequest*>(
      ::etcdserverpb::AuthRoleDeleteRequest::internal_default_instance());
  ::etcdserverpb::_InternalRaftRequest_default_instance_._instance.get_mutable()->auth_role_get_ = const_cast< ::etcdserverpb::AuthRoleGetRequest*>(
      ::etcdserverpb::AuthRoleGetRequest::internal_default_instance());
  ::etcdserverpb::_InternalRaftRequest_default_instance_._instance.get_mutable()->auth_role_grant_permission_ = const_cast< ::etcdserverpb::AuthRoleGrantPermissionRequest*>(
      ::etcdserverpb::AuthRoleGrantPermissionRequest::internal_default_instance());
  ::etcdserverpb::_InternalRaftRequest_default_instance_._instance.get_mutable()->auth_role_revoke_permission_ = const_cast< ::etcdserverpb::AuthRoleRevokePermissionRequest*>(
      ::etcdserverpb::AuthRoleRevokePermissionRequest::internal_default_instance());
}
class InternalRaftRequest::_Internal {
 public:
  static const ::etcdserverpb::RequestHeader& header(const InternalRaftRequest* msg);
  static const ::etcdserverpb::Request& v2(const InternalRaftRequest* msg);
  static const ::etcdserverpb::RangeRequest& range(const InternalRaftRequest* msg);
  static const ::etcdserverpb::PutRequest& put(const InternalRaftRequest* msg);
  static const ::etcdserverpb::DeleteRangeRequest& delete_range(const InternalRaftRequest* msg);
  static const ::etcdserverpb::TxnRequest& txn(const InternalRaftRequest* msg);
  static const ::etcdserverpb::CompactionRequest& compaction(const InternalRaftRequest* msg);
  static const ::etcdserverpb::LeaseGrantRequest& lease_grant(const InternalRaftRequest* msg);
  static const ::etcdserverpb::LeaseRevokeRequest& lease_revoke(const InternalRaftRequest* msg);
  static const ::etcdserverpb::AlarmRequest& alarm(const InternalRaftRequest* msg);
  static const ::etcdserverpb::AuthEnableRequest& auth_enable(const InternalRaftRequest* msg);
  static const ::etcdserverpb::AuthDisableRequest& auth_disable(const InternalRaftRequest* msg);
  static const ::etcdserverpb::InternalAuthenticateRequest& authenticate(const InternalRaftRequest* msg);
  static const ::etcdserverpb::AuthUserAddRequest& auth_user_add(const InternalRaftRequest* msg);
  static const ::etcdserverpb::AuthUserDeleteRequest& auth_user_delete(const InternalRaftRequest* msg);
  static const ::etcdserverpb::AuthUserGetRequest& auth_user_get(const InternalRaftRequest* msg);
  static const ::etcdserverpb::AuthUserChangePasswordRequest& auth_user_change_password(const InternalRaftRequest* msg);
  static const ::etcdserverpb::AuthUserGrantRoleRequest& auth_user_grant_role(const InternalRaftRequest* msg);
  static const ::etcdserverpb::AuthUserRevokeRoleRequest& auth_user_revoke_role(const InternalRaftRequest* msg);
  static const ::etcdserverpb::AuthUserListRequest& auth_user_list(const InternalRaftRequest* msg);
  static const ::etcdserverpb::AuthRoleListRequest& auth_role_list(const InternalRaftRequest* msg);
  static const ::etcdserverpb::AuthRoleAddRequest& auth_role_add(const InternalRaftRequest* msg);
  static const ::etcdserverpb::AuthRoleDeleteRequest& auth_role_delete(const InternalRaftRequest* msg);
  static const ::etcdserverpb::AuthRoleGetRequest& auth_role_get(const InternalRaftRequest* msg);
  static const ::etcdserverpb::AuthRoleGrantPermissionRequest& auth_role_grant_permission(const InternalRaftRequest* msg);
  static const ::etcdserverpb::AuthRoleRevokePermissionRequest& auth_role_revoke_permission(const InternalRaftRequest* msg);
};

const ::etcdserverpb::RequestHeader&
InternalRaftRequest::_Internal::header(const InternalRaftRequest* msg) {
  return *msg->header_;
}
const ::etcdserverpb::Request&
InternalRaftRequest::_Internal::v2(const InternalRaftRequest* msg) {
  return *msg->v2_;
}
const ::etcdserverpb::RangeRequest&
InternalRaftRequest::_Internal::range(const InternalRaftRequest* msg) {
  return *msg->range_;
}
const ::etcdserverpb::PutRequest&
InternalRaftRequest::_Internal::put(const InternalRaftRequest* msg) {
  return *msg->put_;
}
const ::etcdserverpb::DeleteRangeRequest&
InternalRaftRequest::_Internal::delete_range(const InternalRaftRequest* msg) {
  return *msg->delete_range_;
}
const ::etcdserverpb::TxnRequest&
InternalRaftRequest::_Internal::txn(const InternalRaftRequest* msg) {
  return *msg->txn_;
}
const ::etcdserverpb::CompactionRequest&
InternalRaftRequest::_Internal::compaction(const InternalRaftRequest* msg) {
  return *msg->compaction_;
}
const ::etcdserverpb::LeaseGrantRequest&
InternalRaftRequest::_Internal::lease_grant(const InternalRaftRequest* msg) {
  return *msg->lease_grant_;
}
const ::etcdserverpb::LeaseRevokeRequest&
InternalRaftRequest::_Internal::lease_revoke(const InternalRaftRequest* msg) {
  return *msg->lease_revoke_;
}
const ::etcdserverpb::AlarmRequest&
InternalRaftRequest::_Internal::alarm(const InternalRaftRequest* msg) {
  return *msg->alarm_;
}
const ::etcdserverpb::AuthEnableRequest&
InternalRaftRequest::_Internal::auth_enable(const InternalRaftRequest* msg) {
  return *msg->auth_enable_;
}
const ::etcdserverpb::AuthDisableRequest&
InternalRaftRequest::_Internal::auth_disable(const InternalRaftRequest* msg) {
  return *msg->auth_disable_;
}
const ::etcdserverpb::InternalAuthenticateRequest&
InternalRaftRequest::_Internal::authenticate(const InternalRaftRequest* msg) {
  return *msg->authenticate_;
}
const ::etcdserverpb::AuthUserAddRequest&
InternalRaftRequest::_Internal::auth_user_add(const InternalRaftRequest* msg) {
  return *msg->auth_user_add_;
}
const ::etcdserverpb::AuthUserDeleteRequest&
InternalRaftRequest::_Internal::auth_user_delete(const InternalRaftRequest* msg) {
  return *msg->auth_user_delete_;
}
const ::etcdserverpb::AuthUserGetRequest&
InternalRaftRequest::_Internal::auth_user_get(const InternalRaftRequest* msg) {
  return *msg->auth_user_get_;
}
const ::etcdserverpb::AuthUserChangePasswordRequest&
InternalRaftRequest::_Internal::auth_user_change_password(const InternalRaftRequest* msg) {
  return *msg->auth_user_change_password_;
}
const ::etcdserverpb::AuthUserGrantRoleRequest&
InternalRaftRequest::_Internal::auth_user_grant_role(const InternalRaftRequest* msg) {
  return *msg->auth_user_grant_role_;
}
const ::etcdserverpb::AuthUserRevokeRoleRequest&
InternalRaftRequest::_Internal::auth_user_revoke_role(const InternalRaftRequest* msg) {
  return *msg->auth_user_revoke_role_;
}
const ::etcdserverpb::AuthUserListRequest&
InternalRaftRequest::_Internal::auth_user_list(const InternalRaftRequest* msg) {
  return *msg->auth_user_list_;
}
const ::etcdserverpb::AuthRoleListRequest&
InternalRaftRequest::_Internal::auth_role_list(const InternalRaftRequest* msg) {
  return *msg->auth_role_list_;
}
const ::etcdserverpb::AuthRoleAddRequest&
InternalRaftRequest::_Internal::auth_role_add(const InternalRaftRequest* msg) {
  return *msg->auth_role_add_;
}
const ::etcdserverpb::AuthRoleDeleteRequest&
InternalRaftRequest::_Internal::auth_role_delete(const InternalRaftRequest* msg) {
  return *msg->auth_role_delete_;
}
const ::etcdserverpb::AuthRoleGetRequest&
InternalRaftRequest::_Internal::auth_role_get(const InternalRaftRequest* msg) {
  return *msg->auth_role_get_;
}
const ::etcdserverpb::AuthRoleGrantPermissionRequest&
InternalRaftRequest::_Internal::auth_role_grant_permission(const InternalRaftRequest* msg) {
  return *msg->auth_role_grant_permission_;
}
const ::etcdserverpb::AuthRoleRevokePermissionRequest&
InternalRaftRequest::_Internal::auth_role_revoke_permission(const InternalRaftRequest* msg) {
  return *msg->auth_role_revoke_permission_;
}
void InternalRaftRequest::clear_v2() {
  if (GetArenaNoVirtual() == nullptr && v2_ != nullptr) {
    delete v2_;
  }
  v2_ = nullptr;
}
void InternalRaftRequest::clear_range() {
  if (GetArenaNoVirtual() == nullptr && range_ != nullptr) {
    delete range_;
  }
  range_ = nullptr;
}
void InternalRaftRequest::clear_put() {
  if (GetArenaNoVirtual() == nullptr && put_ != nullptr) {
    delete put_;
  }
  put_ = nullptr;
}
void InternalRaftRequest::clear_delete_range() {
  if (GetArenaNoVirtual() == nullptr && delete_range_ != nullptr) {
    delete delete_range_;
  }
  delete_range_ = nullptr;
}
void InternalRaftRequest::clear_txn() {
  if (GetArenaNoVirtual() == nullptr && txn_ != nullptr) {
    delete txn_;
  }
  txn_ = nullptr;
}
void InternalRaftRequest::clear_compaction() {
  if (GetArenaNoVirtual() == nullptr && compaction_ != nullptr) {
    delete compaction_;
  }
  compaction_ = nullptr;
}
void InternalRaftRequest::clear_lease_grant() {
  if (GetArenaNoVirtual() == nullptr && lease_grant_ != nullptr) {
    delete lease_grant_;
  }
  lease_grant_ = nullptr;
}
void InternalRaftRequest::clear_lease_revoke() {
  if (GetArenaNoVirtual() == nullptr && lease_revoke_ != nullptr) {
    delete lease_revoke_;
  }
  lease_revoke_ = nullptr;
}
void InternalRaftRequest::clear_alarm() {
  if (GetArenaNoVirtual() == nullptr && alarm_ != nullptr) {
    delete alarm_;
  }
  alarm_ = nullptr;
}
void InternalRaftRequest::clear_auth_enable() {
  if (GetArenaNoVirtual() == nullptr && auth_enable_ != nullptr) {
    delete auth_enable_;
  }
  auth_enable_ = nullptr;
}
void InternalRaftRequest::clear_auth_disable() {
  if (GetArenaNoVirtual() == nullptr && auth_disable_ != nullptr) {
    delete auth_disable_;
  }
  auth_disable_ = nullptr;
}
void InternalRaftRequest::clear_auth_user_add() {
  if (GetArenaNoVirtual() == nullptr && auth_user_add_ != nullptr) {
    delete auth_user_add_;
  }
  auth_user_add_ = nullptr;
}
void InternalRaftRequest::clear_auth_user_delete() {
  if (GetArenaNoVirtual() == nullptr && auth_user_delete_ != nullptr) {
    delete auth_user_delete_;
  }
  auth_user_delete_ = nullptr;
}
void InternalRaftRequest::clear_auth_user_get() {
  if (GetArenaNoVirtual() == nullptr && auth_user_get_ != nullptr) {
    delete auth_user_get_;
  }
  auth_user_get_ = nullptr;
}
void InternalRaftRequest::clear_auth_user_change_password() {
  if (GetArenaNoVirtual() == nullptr && auth_user_change_password_ != nullptr) {
    delete auth_user_change_password_;
  }
  auth_user_change_password_ = nullptr;
}
void InternalRaftRequest::clear_auth_user_grant_role() {
  if (GetArenaNoVirtual() == nullptr && auth_user_grant_role_ != nullptr) {
    delete auth_user_grant_role_;
  }
  auth_user_grant_role_ = nullptr;
}
void InternalRaftRequest::clear_auth_user_revoke_role() {
  if (GetArenaNoVirtual() == nullptr && auth_user_revoke_role_ != nullptr) {
    delete auth_user_revoke_role_;
  }
  auth_user_revoke_role_ = nullptr;
}
void InternalRaftRequest::clear_auth_user_list() {
  if (GetArenaNoVirtual() == nullptr && auth_user_list_ != nullptr) {
    delete auth_user_list_;
  }
  auth_user_list_ = nullptr;
}
void InternalRaftRequest::clear_auth_role_list() {
  if (GetArenaNoVirtual() == nullptr && auth_role_list_ != nullptr) {
    delete auth_role_list_;
  }
  auth_role_list_ = nullptr;
}
void InternalRaftRequest::clear_auth_role_add() {
  if (GetArenaNoVirtual() == nullptr && auth_role_add_ != nullptr) {
    delete auth_role_add_;
  }
  auth_role_add_ = nullptr;
}
void InternalRaftRequest::clear_auth_role_delete() {
  if (GetArenaNoVirtual() == nullptr && auth_role_delete_ != nullptr) {
    delete auth_role_delete_;
  }
  auth_role_delete_ = nullptr;
}
void InternalRaftRequest::clear_auth_role_get() {
  if (GetArenaNoVirtual() == nullptr && auth_role_get_ != nullptr) {
    delete auth_role_get_;
  }
  auth_role_get_ = nullptr;
}
void InternalRaftRequest::clear_auth_role_grant_permission() {
  if (GetArenaNoVirtual() == nullptr && auth_role_grant_permission_ != nullptr) {
    delete auth_role_grant_permission_;
  }
  auth_role_grant_permission_ = nullptr;
}
void InternalRaftRequest::clear_auth_role_revoke_permission() {
  if (GetArenaNoVirtual() == nullptr && auth_role_revoke_permission_ != nullptr) {
    delete auth_role_revoke_permission_;
  }
  auth_role_revoke_permission_ = nullptr;
}
InternalRaftRequest::InternalRaftRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.InternalRaftRequest)
}
InternalRaftRequest::InternalRaftRequest(const InternalRaftRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_v2()) {
    v2_ = new ::etcdserverpb::Request(*from.v2_);
  } else {
    v2_ = nullptr;
  }
  if (from._internal_has_range()) {
    range_ = new ::etcdserverpb::RangeRequest(*from.range_);
  } else {
    range_ = nullptr;
  }
  if (from._internal_has_put()) {
    put_ = new ::etcdserverpb::PutRequest(*from.put_);
  } else {
    put_ = nullptr;
  }
  if (from._internal_has_delete_range()) {
    delete_range_ = new ::etcdserverpb::DeleteRangeRequest(*from.delete_range_);
  } else {
    delete_range_ = nullptr;
  }
  if (from._internal_has_txn()) {
    txn_ = new ::etcdserverpb::TxnRequest(*from.txn_);
  } else {
    txn_ = nullptr;
  }
  if (from._internal_has_compaction()) {
    compaction_ = new ::etcdserverpb::CompactionRequest(*from.compaction_);
  } else {
    compaction_ = nullptr;
  }
  if (from._internal_has_lease_grant()) {
    lease_grant_ = new ::etcdserverpb::LeaseGrantRequest(*from.lease_grant_);
  } else {
    lease_grant_ = nullptr;
  }
  if (from._internal_has_lease_revoke()) {
    lease_revoke_ = new ::etcdserverpb::LeaseRevokeRequest(*from.lease_revoke_);
  } else {
    lease_revoke_ = nullptr;
  }
  if (from._internal_has_alarm()) {
    alarm_ = new ::etcdserverpb::AlarmRequest(*from.alarm_);
  } else {
    alarm_ = nullptr;
  }
  if (from._internal_has_header()) {
    header_ = new ::etcdserverpb::RequestHeader(*from.header_);
  } else {
    header_ = nullptr;
  }
  if (from._internal_has_auth_enable()) {
    auth_enable_ = new ::etcdserverpb::AuthEnableRequest(*from.auth_enable_);
  } else {
    auth_enable_ = nullptr;
  }
  if (from._internal_has_auth_disable()) {
    auth_disable_ = new ::etcdserverpb::AuthDisableRequest(*from.auth_disable_);
  } else {
    auth_disable_ = nullptr;
  }
  if (from._internal_has_authenticate()) {
    authenticate_ = new ::etcdserverpb::InternalAuthenticateRequest(*from.authenticate_);
  } else {
    authenticate_ = nullptr;
  }
  if (from._internal_has_auth_user_add()) {
    auth_user_add_ = new ::etcdserverpb::AuthUserAddRequest(*from.auth_user_add_);
  } else {
    auth_user_add_ = nullptr;
  }
  if (from._internal_has_auth_user_delete()) {
    auth_user_delete_ = new ::etcdserverpb::AuthUserDeleteRequest(*from.auth_user_delete_);
  } else {
    auth_user_delete_ = nullptr;
  }
  if (from._internal_has_auth_user_get()) {
    auth_user_get_ = new ::etcdserverpb::AuthUserGetRequest(*from.auth_user_get_);
  } else {
    auth_user_get_ = nullptr;
  }
  if (from._internal_has_auth_user_change_password()) {
    auth_user_change_password_ = new ::etcdserverpb::AuthUserChangePasswordRequest(*from.auth_user_change_password_);
  } else {
    auth_user_change_password_ = nullptr;
  }
  if (from._internal_has_auth_user_grant_role()) {
    auth_user_grant_role_ = new ::etcdserverpb::AuthUserGrantRoleRequest(*from.auth_user_grant_role_);
  } else {
    auth_user_grant_role_ = nullptr;
  }
  if (from._internal_has_auth_user_revoke_role()) {
    auth_user_revoke_role_ = new ::etcdserverpb::AuthUserRevokeRoleRequest(*from.auth_user_revoke_role_);
  } else {
    auth_user_revoke_role_ = nullptr;
  }
  if (from._internal_has_auth_user_list()) {
    auth_user_list_ = new ::etcdserverpb::AuthUserListRequest(*from.auth_user_list_);
  } else {
    auth_user_list_ = nullptr;
  }
  if (from._internal_has_auth_role_list()) {
    auth_role_list_ = new ::etcdserverpb::AuthRoleListRequest(*from.auth_role_list_);
  } else {
    auth_role_list_ = nullptr;
  }
  if (from._internal_has_auth_role_add()) {
    auth_role_add_ = new ::etcdserverpb::AuthRoleAddRequest(*from.auth_role_add_);
  } else {
    auth_role_add_ = nullptr;
  }
  if (from._internal_has_auth_role_delete()) {
    auth_role_delete_ = new ::etcdserverpb::AuthRoleDeleteRequest(*from.auth_role_delete_);
  } else {
    auth_role_delete_ = nullptr;
  }
  if (from._internal_has_auth_role_get()) {
    auth_role_get_ = new ::etcdserverpb::AuthRoleGetRequest(*from.auth_role_get_);
  } else {
    auth_role_get_ = nullptr;
  }
  if (from._internal_has_auth_role_grant_permission()) {
    auth_role_grant_permission_ = new ::etcdserverpb::AuthRoleGrantPermissionRequest(*from.auth_role_grant_permission_);
  } else {
    auth_role_grant_permission_ = nullptr;
  }
  if (from._internal_has_auth_role_revoke_permission()) {
    auth_role_revoke_permission_ = new ::etcdserverpb::AuthRoleRevokePermissionRequest(*from.auth_role_revoke_permission_);
  } else {
    auth_role_revoke_permission_ = nullptr;
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.InternalRaftRequest)
}

void InternalRaftRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_InternalRaftRequest_raft_5finternal_2eproto.base);
  ::memset(&v2_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&v2_)) + sizeof(id_));
}

InternalRaftRequest::~InternalRaftRequest() {
  // @@protoc_insertion_point(destructor:etcdserverpb.InternalRaftRequest)
  SharedDtor();
}

void InternalRaftRequest::SharedDtor() {
  if (this != internal_default_instance()) delete v2_;
  if (this != internal_default_instance()) delete range_;
  if (this != internal_default_instance()) delete put_;
  if (this != internal_default_instance()) delete delete_range_;
  if (this != internal_default_instance()) delete txn_;
  if (this != internal_default_instance()) delete compaction_;
  if (this != internal_default_instance()) delete lease_grant_;
  if (this != internal_default_instance()) delete lease_revoke_;
  if (this != internal_default_instance()) delete alarm_;
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete auth_enable_;
  if (this != internal_default_instance()) delete auth_disable_;
  if (this != internal_default_instance()) delete authenticate_;
  if (this != internal_default_instance()) delete auth_user_add_;
  if (this != internal_default_instance()) delete auth_user_delete_;
  if (this != internal_default_instance()) delete auth_user_get_;
  if (this != internal_default_instance()) delete auth_user_change_password_;
  if (this != internal_default_instance()) delete auth_user_grant_role_;
  if (this != internal_default_instance()) delete auth_user_revoke_role_;
  if (this != internal_default_instance()) delete auth_user_list_;
  if (this != internal_default_instance()) delete auth_role_list_;
  if (this != internal_default_instance()) delete auth_role_add_;
  if (this != internal_default_instance()) delete auth_role_delete_;
  if (this != internal_default_instance()) delete auth_role_get_;
  if (this != internal_default_instance()) delete auth_role_grant_permission_;
  if (this != internal_default_instance()) delete auth_role_revoke_permission_;
}

void InternalRaftRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InternalRaftRequest& InternalRaftRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_InternalRaftRequest_raft_5finternal_2eproto.base);
  return *internal_default_instance();
}


void InternalRaftRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.InternalRaftRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && v2_ != nullptr) {
    delete v2_;
  }
  v2_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && range_ != nullptr) {
    delete range_;
  }
  range_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && put_ != nullptr) {
    delete put_;
  }
  put_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && delete_range_ != nullptr) {
    delete delete_range_;
  }
  delete_range_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && txn_ != nullptr) {
    delete txn_;
  }
  txn_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && compaction_ != nullptr) {
    delete compaction_;
  }
  compaction_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && lease_grant_ != nullptr) {
    delete lease_grant_;
  }
  lease_grant_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && lease_revoke_ != nullptr) {
    delete lease_revoke_;
  }
  lease_revoke_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && alarm_ != nullptr) {
    delete alarm_;
  }
  alarm_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && auth_enable_ != nullptr) {
    delete auth_enable_;
  }
  auth_enable_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && auth_disable_ != nullptr) {
    delete auth_disable_;
  }
  auth_disable_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && authenticate_ != nullptr) {
    delete authenticate_;
  }
  authenticate_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && auth_user_add_ != nullptr) {
    delete auth_user_add_;
  }
  auth_user_add_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && auth_user_delete_ != nullptr) {
    delete auth_user_delete_;
  }
  auth_user_delete_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && auth_user_get_ != nullptr) {
    delete auth_user_get_;
  }
  auth_user_get_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && auth_user_change_password_ != nullptr) {
    delete auth_user_change_password_;
  }
  auth_user_change_password_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && auth_user_grant_role_ != nullptr) {
    delete auth_user_grant_role_;
  }
  auth_user_grant_role_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && auth_user_revoke_role_ != nullptr) {
    delete auth_user_revoke_role_;
  }
  auth_user_revoke_role_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && auth_user_list_ != nullptr) {
    delete auth_user_list_;
  }
  auth_user_list_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && auth_role_list_ != nullptr) {
    delete auth_role_list_;
  }
  auth_role_list_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && auth_role_add_ != nullptr) {
    delete auth_role_add_;
  }
  auth_role_add_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && auth_role_delete_ != nullptr) {
    delete auth_role_delete_;
  }
  auth_role_delete_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && auth_role_get_ != nullptr) {
    delete auth_role_get_;
  }
  auth_role_get_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && auth_role_grant_permission_ != nullptr) {
    delete auth_role_grant_permission_;
  }
  auth_role_grant_permission_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && auth_role_revoke_permission_ != nullptr) {
    delete auth_role_revoke_permission_;
  }
  auth_role_revoke_permission_ = nullptr;
  id_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* InternalRaftRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 ID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .etcdserverpb.Request v2 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_v2(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .etcdserverpb.RangeRequest range = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_range(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .etcdserverpb.PutRequest put = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_put(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .etcdserverpb.DeleteRangeRequest delete_range = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_delete_range(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .etcdserverpb.TxnRequest txn = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_txn(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .etcdserverpb.CompactionRequest compaction = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_compaction(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .etcdserverpb.LeaseGrantRequest lease_grant = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_lease_grant(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .etcdserverpb.LeaseRevokeRequest lease_revoke = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_lease_revoke(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .etcdserverpb.AlarmRequest alarm = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_alarm(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .etcdserverpb.RequestHeader header = 100;
      case 100:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .etcdserverpb.AuthEnableRequest auth_enable = 1000;
      case 1000:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_auth_enable(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .etcdserverpb.AuthDisableRequest auth_disable = 1011;
      case 1011:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_auth_disable(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .etcdserverpb.InternalAuthenticateRequest authenticate = 1012;
      case 1012:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 162)) {
          ptr = ctx->ParseMessage(_internal_mutable_authenticate(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .etcdserverpb.AuthUserAddRequest auth_user_add = 1100;
      case 1100:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_auth_user_add(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .etcdserverpb.AuthUserDeleteRequest auth_user_delete = 1101;
      case 1101:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_auth_user_delete(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .etcdserverpb.AuthUserGetRequest auth_user_get = 1102;
      case 1102:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          ptr = ctx->ParseMessage(_internal_mutable_auth_user_get(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .etcdserverpb.AuthUserChangePasswordRequest auth_user_change_password = 1103;
      case 1103:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_auth_user_change_password(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .etcdserverpb.AuthUserGrantRoleRequest auth_user_grant_role = 1104;
      case 1104:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          ptr = ctx->ParseMessage(_internal_mutable_auth_user_grant_role(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .etcdserverpb.AuthUserRevokeRoleRequest auth_user_revoke_role = 1105;
      case 1105:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_auth_user_revoke_role(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .etcdserverpb.AuthUserListRequest auth_user_list = 1106;
      case 1106:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 146)) {
          ptr = ctx->ParseMessage(_internal_mutable_auth_user_list(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .etcdserverpb.AuthRoleListRequest auth_role_list = 1107;
      case 1107:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_auth_role_list(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .etcdserverpb.AuthRoleAddRequest auth_role_add = 1200;
      case 1200:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          ptr = ctx->ParseMessage(_internal_mutable_auth_role_add(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .etcdserverpb.AuthRoleDeleteRequest auth_role_delete = 1201;
      case 1201:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_auth_role_delete(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .etcdserverpb.AuthRoleGetRequest auth_role_get = 1202;
      case 1202:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 146)) {
          ptr = ctx->ParseMessage(_internal_mutable_auth_role_get(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .etcdserverpb.AuthRoleGrantPermissionRequest auth_role_grant_permission = 1203;
      case 1203:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_auth_role_grant_permission(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .etcdserverpb.AuthRoleRevokePermissionRequest auth_role_revoke_permission = 1204;
      case 1204:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 162)) {
          ptr = ctx->ParseMessage(_internal_mutable_auth_role_revoke_permission(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* InternalRaftRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.InternalRaftRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 ID = 1;
  if (this->id() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_id(), target);
  }

  // .etcdserverpb.Request v2 = 2;
  if (this->has_v2()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, _Internal::v2(this), target, stream);
  }

  // .etcdserverpb.RangeRequest range = 3;
  if (this->has_range()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, _Internal::range(this), target, stream);
  }

  // .etcdserverpb.PutRequest put = 4;
  if (this->has_put()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, _Internal::put(this), target, stream);
  }

  // .etcdserverpb.DeleteRangeRequest delete_range = 5;
  if (this->has_delete_range()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, _Internal::delete_range(this), target, stream);
  }

  // .etcdserverpb.TxnRequest txn = 6;
  if (this->has_txn()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, _Internal::txn(this), target, stream);
  }

  // .etcdserverpb.CompactionRequest compaction = 7;
  if (this->has_compaction()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, _Internal::compaction(this), target, stream);
  }

  // .etcdserverpb.LeaseGrantRequest lease_grant = 8;
  if (this->has_lease_grant()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, _Internal::lease_grant(this), target, stream);
  }

  // .etcdserverpb.LeaseRevokeRequest lease_revoke = 9;
  if (this->has_lease_revoke()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, _Internal::lease_revoke(this), target, stream);
  }

  // .etcdserverpb.AlarmRequest alarm = 10;
  if (this->has_alarm()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, _Internal::alarm(this), target, stream);
  }

  // .etcdserverpb.RequestHeader header = 100;
  if (this->has_header()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        100, _Internal::header(this), target, stream);
  }

  // .etcdserverpb.AuthEnableRequest auth_enable = 1000;
  if (this->has_auth_enable()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1000, _Internal::auth_enable(this), target, stream);
  }

  // .etcdserverpb.AuthDisableRequest auth_disable = 1011;
  if (this->has_auth_disable()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1011, _Internal::auth_disable(this), target, stream);
  }

  // .etcdserverpb.InternalAuthenticateRequest authenticate = 1012;
  if (this->has_authenticate()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1012, _Internal::authenticate(this), target, stream);
  }

  // .etcdserverpb.AuthUserAddRequest auth_user_add = 1100;
  if (this->has_auth_user_add()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1100, _Internal::auth_user_add(this), target, stream);
  }

  // .etcdserverpb.AuthUserDeleteRequest auth_user_delete = 1101;
  if (this->has_auth_user_delete()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1101, _Internal::auth_user_delete(this), target, stream);
  }

  // .etcdserverpb.AuthUserGetRequest auth_user_get = 1102;
  if (this->has_auth_user_get()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1102, _Internal::auth_user_get(this), target, stream);
  }

  // .etcdserverpb.AuthUserChangePasswordRequest auth_user_change_password = 1103;
  if (this->has_auth_user_change_password()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1103, _Internal::auth_user_change_password(this), target, stream);
  }

  // .etcdserverpb.AuthUserGrantRoleRequest auth_user_grant_role = 1104;
  if (this->has_auth_user_grant_role()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1104, _Internal::auth_user_grant_role(this), target, stream);
  }

  // .etcdserverpb.AuthUserRevokeRoleRequest auth_user_revoke_role = 1105;
  if (this->has_auth_user_revoke_role()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1105, _Internal::auth_user_revoke_role(this), target, stream);
  }

  // .etcdserverpb.AuthUserListRequest auth_user_list = 1106;
  if (this->has_auth_user_list()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1106, _Internal::auth_user_list(this), target, stream);
  }

  // .etcdserverpb.AuthRoleListRequest auth_role_list = 1107;
  if (this->has_auth_role_list()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1107, _Internal::auth_role_list(this), target, stream);
  }

  // .etcdserverpb.AuthRoleAddRequest auth_role_add = 1200;
  if (this->has_auth_role_add()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1200, _Internal::auth_role_add(this), target, stream);
  }

  // .etcdserverpb.AuthRoleDeleteRequest auth_role_delete = 1201;
  if (this->has_auth_role_delete()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1201, _Internal::auth_role_delete(this), target, stream);
  }

  // .etcdserverpb.AuthRoleGetRequest auth_role_get = 1202;
  if (this->has_auth_role_get()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1202, _Internal::auth_role_get(this), target, stream);
  }

  // .etcdserverpb.AuthRoleGrantPermissionRequest auth_role_grant_permission = 1203;
  if (this->has_auth_role_grant_permission()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1203, _Internal::auth_role_grant_permission(this), target, stream);
  }

  // .etcdserverpb.AuthRoleRevokePermissionRequest auth_role_revoke_permission = 1204;
  if (this->has_auth_role_revoke_permission()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1204, _Internal::auth_role_revoke_permission(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.InternalRaftRequest)
  return target;
}

size_t InternalRaftRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.InternalRaftRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .etcdserverpb.Request v2 = 2;
  if (this->has_v2()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *v2_);
  }

  // .etcdserverpb.RangeRequest range = 3;
  if (this->has_range()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *range_);
  }

  // .etcdserverpb.PutRequest put = 4;
  if (this->has_put()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *put_);
  }

  // .etcdserverpb.DeleteRangeRequest delete_range = 5;
  if (this->has_delete_range()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *delete_range_);
  }

  // .etcdserverpb.TxnRequest txn = 6;
  if (this->has_txn()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *txn_);
  }

  // .etcdserverpb.CompactionRequest compaction = 7;
  if (this->has_compaction()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *compaction_);
  }

  // .etcdserverpb.LeaseGrantRequest lease_grant = 8;
  if (this->has_lease_grant()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *lease_grant_);
  }

  // .etcdserverpb.LeaseRevokeRequest lease_revoke = 9;
  if (this->has_lease_revoke()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *lease_revoke_);
  }

  // .etcdserverpb.AlarmRequest alarm = 10;
  if (this->has_alarm()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *alarm_);
  }

  // .etcdserverpb.RequestHeader header = 100;
  if (this->has_header()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *header_);
  }

  // .etcdserverpb.AuthEnableRequest auth_enable = 1000;
  if (this->has_auth_enable()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *auth_enable_);
  }

  // .etcdserverpb.AuthDisableRequest auth_disable = 1011;
  if (this->has_auth_disable()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *auth_disable_);
  }

  // .etcdserverpb.InternalAuthenticateRequest authenticate = 1012;
  if (this->has_authenticate()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *authenticate_);
  }

  // .etcdserverpb.AuthUserAddRequest auth_user_add = 1100;
  if (this->has_auth_user_add()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *auth_user_add_);
  }

  // .etcdserverpb.AuthUserDeleteRequest auth_user_delete = 1101;
  if (this->has_auth_user_delete()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *auth_user_delete_);
  }

  // .etcdserverpb.AuthUserGetRequest auth_user_get = 1102;
  if (this->has_auth_user_get()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *auth_user_get_);
  }

  // .etcdserverpb.AuthUserChangePasswordRequest auth_user_change_password = 1103;
  if (this->has_auth_user_change_password()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *auth_user_change_password_);
  }

  // .etcdserverpb.AuthUserGrantRoleRequest auth_user_grant_role = 1104;
  if (this->has_auth_user_grant_role()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *auth_user_grant_role_);
  }

  // .etcdserverpb.AuthUserRevokeRoleRequest auth_user_revoke_role = 1105;
  if (this->has_auth_user_revoke_role()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *auth_user_revoke_role_);
  }

  // .etcdserverpb.AuthUserListRequest auth_user_list = 1106;
  if (this->has_auth_user_list()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *auth_user_list_);
  }

  // .etcdserverpb.AuthRoleListRequest auth_role_list = 1107;
  if (this->has_auth_role_list()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *auth_role_list_);
  }

  // .etcdserverpb.AuthRoleAddRequest auth_role_add = 1200;
  if (this->has_auth_role_add()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *auth_role_add_);
  }

  // .etcdserverpb.AuthRoleDeleteRequest auth_role_delete = 1201;
  if (this->has_auth_role_delete()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *auth_role_delete_);
  }

  // .etcdserverpb.AuthRoleGetRequest auth_role_get = 1202;
  if (this->has_auth_role_get()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *auth_role_get_);
  }

  // .etcdserverpb.AuthRoleGrantPermissionRequest auth_role_grant_permission = 1203;
  if (this->has_auth_role_grant_permission()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *auth_role_grant_permission_);
  }

  // .etcdserverpb.AuthRoleRevokePermissionRequest auth_role_revoke_permission = 1204;
  if (this->has_auth_role_revoke_permission()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *auth_role_revoke_permission_);
  }

  // uint64 ID = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InternalRaftRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.InternalRaftRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const InternalRaftRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<InternalRaftRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.InternalRaftRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.InternalRaftRequest)
    MergeFrom(*source);
  }
}

void InternalRaftRequest::MergeFrom(const InternalRaftRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.InternalRaftRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_v2()) {
    _internal_mutable_v2()->::etcdserverpb::Request::MergeFrom(from._internal_v2());
  }
  if (from.has_range()) {
    _internal_mutable_range()->::etcdserverpb::RangeRequest::MergeFrom(from._internal_range());
  }
  if (from.has_put()) {
    _internal_mutable_put()->::etcdserverpb::PutRequest::MergeFrom(from._internal_put());
  }
  if (from.has_delete_range()) {
    _internal_mutable_delete_range()->::etcdserverpb::DeleteRangeRequest::MergeFrom(from._internal_delete_range());
  }
  if (from.has_txn()) {
    _internal_mutable_txn()->::etcdserverpb::TxnRequest::MergeFrom(from._internal_txn());
  }
  if (from.has_compaction()) {
    _internal_mutable_compaction()->::etcdserverpb::CompactionRequest::MergeFrom(from._internal_compaction());
  }
  if (from.has_lease_grant()) {
    _internal_mutable_lease_grant()->::etcdserverpb::LeaseGrantRequest::MergeFrom(from._internal_lease_grant());
  }
  if (from.has_lease_revoke()) {
    _internal_mutable_lease_revoke()->::etcdserverpb::LeaseRevokeRequest::MergeFrom(from._internal_lease_revoke());
  }
  if (from.has_alarm()) {
    _internal_mutable_alarm()->::etcdserverpb::AlarmRequest::MergeFrom(from._internal_alarm());
  }
  if (from.has_header()) {
    _internal_mutable_header()->::etcdserverpb::RequestHeader::MergeFrom(from._internal_header());
  }
  if (from.has_auth_enable()) {
    _internal_mutable_auth_enable()->::etcdserverpb::AuthEnableRequest::MergeFrom(from._internal_auth_enable());
  }
  if (from.has_auth_disable()) {
    _internal_mutable_auth_disable()->::etcdserverpb::AuthDisableRequest::MergeFrom(from._internal_auth_disable());
  }
  if (from.has_authenticate()) {
    _internal_mutable_authenticate()->::etcdserverpb::InternalAuthenticateRequest::MergeFrom(from._internal_authenticate());
  }
  if (from.has_auth_user_add()) {
    _internal_mutable_auth_user_add()->::etcdserverpb::AuthUserAddRequest::MergeFrom(from._internal_auth_user_add());
  }
  if (from.has_auth_user_delete()) {
    _internal_mutable_auth_user_delete()->::etcdserverpb::AuthUserDeleteRequest::MergeFrom(from._internal_auth_user_delete());
  }
  if (from.has_auth_user_get()) {
    _internal_mutable_auth_user_get()->::etcdserverpb::AuthUserGetRequest::MergeFrom(from._internal_auth_user_get());
  }
  if (from.has_auth_user_change_password()) {
    _internal_mutable_auth_user_change_password()->::etcdserverpb::AuthUserChangePasswordRequest::MergeFrom(from._internal_auth_user_change_password());
  }
  if (from.has_auth_user_grant_role()) {
    _internal_mutable_auth_user_grant_role()->::etcdserverpb::AuthUserGrantRoleRequest::MergeFrom(from._internal_auth_user_grant_role());
  }
  if (from.has_auth_user_revoke_role()) {
    _internal_mutable_auth_user_revoke_role()->::etcdserverpb::AuthUserRevokeRoleRequest::MergeFrom(from._internal_auth_user_revoke_role());
  }
  if (from.has_auth_user_list()) {
    _internal_mutable_auth_user_list()->::etcdserverpb::AuthUserListRequest::MergeFrom(from._internal_auth_user_list());
  }
  if (from.has_auth_role_list()) {
    _internal_mutable_auth_role_list()->::etcdserverpb::AuthRoleListRequest::MergeFrom(from._internal_auth_role_list());
  }
  if (from.has_auth_role_add()) {
    _internal_mutable_auth_role_add()->::etcdserverpb::AuthRoleAddRequest::MergeFrom(from._internal_auth_role_add());
  }
  if (from.has_auth_role_delete()) {
    _internal_mutable_auth_role_delete()->::etcdserverpb::AuthRoleDeleteRequest::MergeFrom(from._internal_auth_role_delete());
  }
  if (from.has_auth_role_get()) {
    _internal_mutable_auth_role_get()->::etcdserverpb::AuthRoleGetRequest::MergeFrom(from._internal_auth_role_get());
  }
  if (from.has_auth_role_grant_permission()) {
    _internal_mutable_auth_role_grant_permission()->::etcdserverpb::AuthRoleGrantPermissionRequest::MergeFrom(from._internal_auth_role_grant_permission());
  }
  if (from.has_auth_role_revoke_permission()) {
    _internal_mutable_auth_role_revoke_permission()->::etcdserverpb::AuthRoleRevokePermissionRequest::MergeFrom(from._internal_auth_role_revoke_permission());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void InternalRaftRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.InternalRaftRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InternalRaftRequest::CopyFrom(const InternalRaftRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.InternalRaftRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InternalRaftRequest::IsInitialized() const {
  return true;
}

void InternalRaftRequest::InternalSwap(InternalRaftRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(v2_, other->v2_);
  swap(range_, other->range_);
  swap(put_, other->put_);
  swap(delete_range_, other->delete_range_);
  swap(txn_, other->txn_);
  swap(compaction_, other->compaction_);
  swap(lease_grant_, other->lease_grant_);
  swap(lease_revoke_, other->lease_revoke_);
  swap(alarm_, other->alarm_);
  swap(header_, other->header_);
  swap(auth_enable_, other->auth_enable_);
  swap(auth_disable_, other->auth_disable_);
  swap(authenticate_, other->authenticate_);
  swap(auth_user_add_, other->auth_user_add_);
  swap(auth_user_delete_, other->auth_user_delete_);
  swap(auth_user_get_, other->auth_user_get_);
  swap(auth_user_change_password_, other->auth_user_change_password_);
  swap(auth_user_grant_role_, other->auth_user_grant_role_);
  swap(auth_user_revoke_role_, other->auth_user_revoke_role_);
  swap(auth_user_list_, other->auth_user_list_);
  swap(auth_role_list_, other->auth_role_list_);
  swap(auth_role_add_, other->auth_role_add_);
  swap(auth_role_delete_, other->auth_role_delete_);
  swap(auth_role_get_, other->auth_role_get_);
  swap(auth_role_grant_permission_, other->auth_role_grant_permission_);
  swap(auth_role_revoke_permission_, other->auth_role_revoke_permission_);
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InternalRaftRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void EmptyResponse::InitAsDefaultInstance() {
}
class EmptyResponse::_Internal {
 public:
};

EmptyResponse::EmptyResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.EmptyResponse)
}
EmptyResponse::EmptyResponse(const EmptyResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.EmptyResponse)
}

void EmptyResponse::SharedCtor() {
}

EmptyResponse::~EmptyResponse() {
  // @@protoc_insertion_point(destructor:etcdserverpb.EmptyResponse)
  SharedDtor();
}

void EmptyResponse::SharedDtor() {
}

void EmptyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EmptyResponse& EmptyResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EmptyResponse_raft_5finternal_2eproto.base);
  return *internal_default_instance();
}


void EmptyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.EmptyResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* EmptyResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EmptyResponse::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.EmptyResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.EmptyResponse)
  return target;
}

size_t EmptyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.EmptyResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EmptyResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.EmptyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const EmptyResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EmptyResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.EmptyResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.EmptyResponse)
    MergeFrom(*source);
  }
}

void EmptyResponse::MergeFrom(const EmptyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.EmptyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void EmptyResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.EmptyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EmptyResponse::CopyFrom(const EmptyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.EmptyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EmptyResponse::IsInitialized() const {
  return true;
}

void EmptyResponse::InternalSwap(EmptyResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata EmptyResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void InternalAuthenticateRequest::InitAsDefaultInstance() {
}
class InternalAuthenticateRequest::_Internal {
 public:
};

InternalAuthenticateRequest::InternalAuthenticateRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.InternalAuthenticateRequest)
}
InternalAuthenticateRequest::InternalAuthenticateRequest(const InternalAuthenticateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_password().empty()) {
    password_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  simple_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_simple_token().empty()) {
    simple_token_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.simple_token_);
  }
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.InternalAuthenticateRequest)
}

void InternalAuthenticateRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_InternalAuthenticateRequest_raft_5finternal_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  simple_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

InternalAuthenticateRequest::~InternalAuthenticateRequest() {
  // @@protoc_insertion_point(destructor:etcdserverpb.InternalAuthenticateRequest)
  SharedDtor();
}

void InternalAuthenticateRequest::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  simple_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void InternalAuthenticateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InternalAuthenticateRequest& InternalAuthenticateRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_InternalAuthenticateRequest_raft_5finternal_2eproto.base);
  return *internal_default_instance();
}


void InternalAuthenticateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.InternalAuthenticateRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  simple_token_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* InternalAuthenticateRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_name(), ptr, ctx, "etcdserverpb.InternalAuthenticateRequest.name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string password = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_password(), ptr, ctx, "etcdserverpb.InternalAuthenticateRequest.password");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string simple_token = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_simple_token(), ptr, ctx, "etcdserverpb.InternalAuthenticateRequest.simple_token");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* InternalAuthenticateRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.InternalAuthenticateRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "etcdserverpb.InternalAuthenticateRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_password().data(), static_cast<int>(this->_internal_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "etcdserverpb.InternalAuthenticateRequest.password");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_password(), target);
  }

  // string simple_token = 3;
  if (this->simple_token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_simple_token().data(), static_cast<int>(this->_internal_simple_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "etcdserverpb.InternalAuthenticateRequest.simple_token");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_simple_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.InternalAuthenticateRequest)
  return target;
}

size_t InternalAuthenticateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.InternalAuthenticateRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_password());
  }

  // string simple_token = 3;
  if (this->simple_token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_simple_token());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InternalAuthenticateRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.InternalAuthenticateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const InternalAuthenticateRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<InternalAuthenticateRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.InternalAuthenticateRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.InternalAuthenticateRequest)
    MergeFrom(*source);
  }
}

void InternalAuthenticateRequest::MergeFrom(const InternalAuthenticateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.InternalAuthenticateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.simple_token().size() > 0) {

    simple_token_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.simple_token_);
  }
}

void InternalAuthenticateRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.InternalAuthenticateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InternalAuthenticateRequest::CopyFrom(const InternalAuthenticateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.InternalAuthenticateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InternalAuthenticateRequest::IsInitialized() const {
  return true;
}

void InternalAuthenticateRequest::InternalSwap(InternalAuthenticateRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  password_.Swap(&other->password_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  simple_token_.Swap(&other->simple_token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata InternalAuthenticateRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace etcdserverpb
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::etcdserverpb::RequestHeader* Arena::CreateMaybeMessage< ::etcdserverpb::RequestHeader >(Arena* arena) {
  return Arena::CreateInternal< ::etcdserverpb::RequestHeader >(arena);
}
template<> PROTOBUF_NOINLINE ::etcdserverpb::InternalRaftRequest* Arena::CreateMaybeMessage< ::etcdserverpb::InternalRaftRequest >(Arena* arena) {
  return Arena::CreateInternal< ::etcdserverpb::InternalRaftRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::etcdserverpb::EmptyResponse* Arena::CreateMaybeMessage< ::etcdserverpb::EmptyResponse >(Arena* arena) {
  return Arena::CreateInternal< ::etcdserverpb::EmptyResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::etcdserverpb::InternalAuthenticateRequest* Arena::CreateMaybeMessage< ::etcdserverpb::InternalAuthenticateRequest >(Arena* arena) {
  return Arena::CreateInternal< ::etcdserverpb::InternalAuthenticateRequest >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
